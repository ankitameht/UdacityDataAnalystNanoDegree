ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
box <- center_bbox(77.2197,28.6328,4000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
mtext("x-axis",
side=1) #Add text to the x-axis
mtext("y-axis",
side=2)
title("An R Plot") #Add a title
plot(osm)
town <- osm
ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v == "police")))
ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
plot(town, xlim=c(77.20,77.26), ylim=c(28.63,28.70))
plot_ways(rt, add = TRUE, col = "green")
plot_nodes(ts, add = TRUE, col = "red")
plot_nodes(bs, add = TRUE, col = "blue")
box <- center_bbox(77.2197,28.6328,6000,6000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
box <- center_bbox(77.2197,28.6328,6000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
plot(osm)
town <- osm
ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v == "police")))
ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
plot(town, xlim=c(77.20,77.26), ylim=c(28.63,28.70))
plot_ways(rt, add = TRUE, col = "green")
#plot_nodes(ts, add = TRUE, col = "red")
plot_nodes(bs, add = TRUE, col = "blue")
plot(osm, lwd = 3)
plot(osm, lwd = 6)
map <- openmap(c(77.2197,-118.22052955627441),c(28.6328,-118.17521095275879))
library(openmap)
map <- openmap(c(77.2197,-118.22052955627441),c(28.6328,-118.17521095275879))
install.packages("openmap")
install.packages("OpenStreetMap")
library(OpenStreetMap)
library(rgdal)
install.packages("rgdal")
plot(osm, angle = 45)
plot3d(wt, disp, mpg, col="red", size=3)
library(rgl)
library(osmar)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
title("An R Plot of Open Street Maps Representing the 5km distance around CP Delhi")
town <- osm
ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v == "police")))
ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
bs_ids <- find(town, node(tags(v %agrep% "police")))
ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
title("An R Plot of Open Street Maps Representing the 5km distance around CP Delhi")
town <- osm
#ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v %agrep% "amenity")))
#ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
library(osmar)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
plot(osm)
title("An R Plot of Open Street Maps Representing the 5km distance around CP Delhi")
town <- osm
#ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v %agrep% "amenity")))
#ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
plot_ways(rt, add = TRUE, col = "green")
#plot_nodes(ts, add = TRUE, col = "red")
plot_nodes(bs, add = TRUE, col = "blue")
bs_ids <- find(town, node(tags(k %agrep% "amenity")))
#ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
plot_nodes(bs, add = TRUE, col = "blue")
hs_ids <- find(town, node(tags(v %agrep% "hospital")))
hs <- subset(town, node_ids = bs_ids)
summary(hs)
hs <- subset(town, node_ids = hs_ids)
summary(hs)
plot_nodes(hs, add = TRUE, col = "red")
hs_ids <- find(town, node(tags(v %agrep% "police")))
hs <- subset(town, node_ids = hs_ids)
summary(hs)
plot_nodes(hs, add = TRUE, col = "red")
library(osmar)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
install.packages("igraph")
install.packages("igraph")
plot(graph)
library(osmar)
library(igraph)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
graph <- as_igraph(osm)
plot(graph)
box <- center_bbox(77.2197,28.6328,500,500)
src <- osmsource_api()
osm <- get_osm(box, source = src)
graph <- as_igraph(osm)
plot(graph)
library(osmar)
box <- center_bbox(77.2197,28.6328,20,20)
src <- osmsource_api()
osm <- get_osm(box, source = src)
hs_ids <- find(osm, node(tags(v %agrep% "station")))
hs <- subset(osm, node_ids = hs_ids)
lat <- hs$nodes$attrs$lat
lng <- hs$nodes$attrs$lon
str(lat)
df <- data.frame(lat,lng)
#making voronoi diagram
library(deldir)
#This creates the voronoi line segments
voronoi <- deldir(df$lng, df$lat)
str(voronoi)
ggmap(osm)
library(ggmap)
library(ggplot2)
ggmap(osm)
library(ggmap)
plot(osm)
voronoi <- deldir(df$lng, df$lat)
str(voronoi)
library(ggmap)
library(ggplot2)
delhi <- get_map(location="New Delhi",zoom=13,source="osm")
delhi <- get_map(location= c(lon = 77.2197, lat = 28.6328),zoom=13,source="osm")
str(delhi)
ggmap(delhi) +
geom_point(aes(x = lng, y = lat), data = df,
alpha = .8, color="red", size = 1) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),
size = 0.5,
data = voronoi$dirsgs,
linetype = 1,
color= "#000000")
"my"+"apple"
"Fe" == "fe"
x = 2; y = T; z = "apple";
typeof(x); typeof(y); typeof(z);
a = c(2 ,6) and b = c(4, 3, 5, 7)
a = c(2 ,6); b = c(4, 3, 5, 7)
s = a+b
s
a = c(2 ,6); b = c(4, 3, 5, 7)
vect <- c(1, 3, 5, 6)
vect2 <- vect[-3]
vect2
a = c(2 ,6, 3); b = c(4, 3, 5, 7)
s = s*b
s
s = a*b
s
library(swirl)
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
library(swirl)
5 + 7
x <- 5 + 7
x
y <- x - 3
y
bye()
logical_levels
matrix(1:9, byrow = TRUE, nrow = 3)
matrix(1:9, byrow = FALSE, nrow = 3)
```{r global_options, include=FALSE}
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
ProsperLoanData = read.csv("prosperLoanData.csv")
setwd("~/Desktop/DesktopRaw/NANODEGREE/Data Analyst/P4")
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
ProsperLoanData = read.csv("prosperLoanData.csv")
sprintf("No of data points: %s", nrow(ProsperLoanData))
sprintf("No of features: %s", ncol(ProsperLoanData))
names(ProsperLoanData)
str(ProsperLoanData)
ProsperLoanData$ProsperRating.alpha = factor(ProsperLoanData$ProsperRating..Alpha.,
levels = c("AA","A","B","C","D","E","HR","NA"))
ProsperLoanData$ProsperRating <-factor(ProsperLoanData$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ProsperLoanData$ProsperScore = factor(ProsperLoanData$ProsperScore)
ggplot(data = na.omit(ProsperLoanData), aes(ProsperRating.alpha)) +
geom_bar(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
table(ProsperLoanData$ProsperRating.alpha)
ggplot(data = ProsperLoanData, aes(ProsperRating.alpha)) +
geom_bar(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
table(ProsperLoanData$ProsperRating.alpha)
hetcor(ProsperLoanData,ML = FALSE, std.err = TRUE, bins=4, pd=TRUE)
require(mvtnorm)
hetcor(ProsperLoanData,ML = FALSE, std.err = TRUE, bins=4, pd=TRUE)
require(polycor)
library(polycor)
install.packages("polycor")
ggplot(data = ProsperLoanData, aes(x = DebtToIncomeRatio)) +
geom_histogram(color = "black", fill = '#007E0F', binwidth = 0.02) +
xlim(0, quantile(ProsperLoanData$DebtToIncomeRatio, prob = 0.99, na.rm=TRUE)) +
ggtitle("Debt To Income Ratio") +
xlab("Debt to Income Ratio") +
ylab("Count") +
scale_colour_brewer()
ggplot(aes(x= DebtToIncomeRatio, y=LenderYield, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 1) +
#scale_y_log10() +
#facet_grid(.~ ProsperRating.alpha ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield  vs Debt to Income Ratio vs Prosper Rate (for loans with rating") +
scale_colour_brewer()+theme_dark()+
xlab ("Debt To Income Ratio < 1") +
ylab ("Lender Yield") +
scale_fill_discrete(name = "Prosper Rating")
ggplot(aes(x= DebtToIncomeRatio, y=LenderYield, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 1) +
#scale_y_log10() +
#facet_grid(.~ ProsperRating.alpha ) +
#theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield  vs Debt to Income Ratio vs Prosper Rate (for loans with rating")      + scale_colour_brewer()
+theme_dark() +
xlab ("Debt To Income Ratio < 1") +
ylab ("Lender Yield") +
scale_fill_discrete(name = "Prosper Rating")
ggplot(aes(x= DebtToIncomeRatio, y=LenderYield, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 1) +
theme_dark() +
#scale_y_log10() +
#facet_grid(.~ ProsperRating.alpha ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield  vs Debt to Income Ratio vs Prosper Rate (for loans with rating")      + scale_colour_brewer() +
xlab ("Debt To Income Ratio < 1") +
ylab ("Lender Yield") +
scale_fill_discrete(name = "Prosper Rating")
ggplot(aes(y = LoanOriginalAmount, x = factor(Term)), data = ProsperLoanData) +
geom_boxplot(fill='#FFCCCC') +
scale_y_continuous(
limits = c(0, quantile(ProsperLoanData$LoanOriginalAmount, 0.99, na.rm = TRUE)))
plot1 <- ggplot(aes(x= ProsperRating.alpha, y=LenderYield,
color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 0.8, position = "jitter") +
facet_grid( .~ Term  ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer(palette = "Greens") +
ggtitle("Lender Yield vs Term
and Prosper Rating")
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= LenderYield ),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ Term   ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Boxplot - Lender Yield vs Term and Prosper Rating")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= LenderYield ),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ Term   ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer(palette = "Greens") +
ggtitle("Boxplot - Lender Yield vs Term and Prosper Rating")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= LenderYield ),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ Term   ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer() +
ggtitle("Boxplot - Lender Yield vs Term and Prosper Rating")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
library(polycor)
plot1 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate),
data=na.omit(filter(ProsperLoanData))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ LoanOriginationDate.year) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer()+
ggtitle("Lender Yield vs Term and Prosper Rate")
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha ),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
theme_dark() +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer()+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha ),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer()+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot1 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate),
data=na.omit(filter(ProsperLoanData))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ LoanOriginationDate.year) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer()+
ggtitle("Lender Yield vs Term and Prosper Rate")
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha ),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot1 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate),
data=na.omit(filter(ProsperLoanData))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot1 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate),
data=na.omit(filter(ProsperLoanData))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha ),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
plot11 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate),
data=na.omit(filter(ProsperLoanData))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
plot22 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha ),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot11, plot22, ncol=1, nrow =2)
ggplot(aes(x= DebtToIncomeRatio, y=LenderYield, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 1) +
theme_dark() +
#scale_y_log10() +
#facet_grid(.~ ProsperRating.alpha ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield  vs Debt to Income Ratio vs Prosper Rate (for loans with rating")      + scale_colour_brewer() +
xlab ("Debt To Income Ratio < 1") +
ylab ("Lender Yield") +
scale_fill_discrete(name = "Prosper Rating")
ggplot(aes(x= DebtToIncomeRatio, y=LenderYield, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 1) +
theme_dark() +
#scale_y_log10() +
#facet_grid(.~ ProsperRating.alpha ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield  vs Debt to Income Ratio vs Prosper Rate (for loans with rating")      + scale_colour_brewer() +
xlab ("Debt To Income Ratio < 1") +
ylab ("Lender Yield") +
scale_fill_discrete(name = "Prosper Rating")
cor(ProsperLoanData)
rcorr(ProsperLoanData, type="pearson")
cor(ProsperLoanData$Term,ProsperLoanData$LoanOriginalAmount)
cor(ProsperLoanData$ProsperRating,ProsperLoanData$DebtToIncomeRatio)
cor(ProsperLoanData$ProsperRating,ProsperLoanData$LenderYield)
cor(ProsperLoanData$DebtToIncomeRatio,ProsperLoanData$LenderYield)
cor(ProsperLoanData$ProsperRating..numeric.,ProsperLoanData$LenderYield)
cor(ProsperLoanData$ProsperRating..numeric.,ProsperLoanData$DebtToIncomeRatio)
cor(ProsperLoanData$Term,ProsperLoanData$LoanOriginalAmount)
mean(ProsperLoanData$ProsperRating.alpha)
median(ProsperLoanData$ProsperRating.alpha)
mode(ProsperLoanData$ProsperRating.alpha)
mode(ProsperLoanData$ProsperRating.alpha[0])
mode(ProsperLoanData$ProsperRating.alpha[0][0])
```
cov(ProsperLoanData$ProsperRating.alpha)
table(ProsperLoanData$ProsperRating.alpha)
table(ProsperLoanData$ProsperScore)
mean(ProsperLoanData$ProsperScore)
mode(ProsperLoanData$ProsperScore)
table(ProsperLoanData$LoanStatus)
table(ProsperLoanData$EmploymentStatus)
summary(ProsperLoanData$IncomeRange)
max(ProsperLoanData$IncomeRange)
summary(ProsperLoanData$StatedMonthlyIncome)
summary(ProsperLoanData$StatedMonthlyIncome)
mean(ProsperLoanData$StatedMonthlyIncome)
max(ProsperLoanData$StatedMonthlyIncome)
median(ProsperLoanData$StatedMonthlyIncome)
summary(ProsperLoanData$StatedMonthlyIncome)
table(ProsperLoanData$StatedMonthlyIncome)
summary(ProsperLoanData$ListingCategory)
ggplot(aes(x = StatedMonthlyIncome), data = prosper) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(prosper$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(prosper$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(aes(x = StatedMonthlyIncome), data = ProsperLoanData) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(ProsperLoanData$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(ProsperLoanData$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
summary(ProsperLoanData$StatedMonthlyIncome)
summary(ProsperLoanData$BorrowerRate)
cor(prosper$DebtToIncomeRatio, prosper$BorrowerRate, use = 'complete.obs')
cor(ProsperLoanData$DebtToIncomeRatio, ProsperLoanData$BorrowerRate, use = 'complete.obs')
