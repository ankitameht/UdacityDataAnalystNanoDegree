bs_ids <- find(town, node(tags(v == "police")))
ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
bs_ids <- find(town, node(tags(v %agrep% "police")))
ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
title("An R Plot of Open Street Maps Representing the 5km distance around CP Delhi")
town <- osm
#ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v %agrep% "amenity")))
#ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
library(osmar)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
plot(osm)
title("An R Plot of Open Street Maps Representing the 5km distance around CP Delhi")
town <- osm
#ts_ids <- find(town, node(tags(v == "traffic_signals")))
rt_ids <- find(town, way(tags(k == "highway")))
rt_ids <- find_down(town, way(rt_ids))
rt_ids
bs_ids <- find(town, node(tags(v %agrep% "amenity")))
#ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
plot_ways(rt, add = TRUE, col = "green")
#plot_nodes(ts, add = TRUE, col = "red")
plot_nodes(bs, add = TRUE, col = "blue")
bs_ids <- find(town, node(tags(k %agrep% "amenity")))
#ts <- subset(town, node_ids = ts_ids)
bs <- subset(town, node_ids = bs_ids)
rt <- subset(town, ids = rt_ids)
#plot(town, col = "gray", raster=FALSE)
summary(bs)
plot_nodes(bs, add = TRUE, col = "blue")
hs_ids <- find(town, node(tags(v %agrep% "hospital")))
hs <- subset(town, node_ids = bs_ids)
summary(hs)
hs <- subset(town, node_ids = hs_ids)
summary(hs)
plot_nodes(hs, add = TRUE, col = "red")
hs_ids <- find(town, node(tags(v %agrep% "police")))
hs <- subset(town, node_ids = hs_ids)
summary(hs)
plot_nodes(hs, add = TRUE, col = "red")
library(osmar)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
install.packages("igraph")
install.packages("igraph")
plot(graph)
library(osmar)
library(igraph)
#                     E       N
box <- center_bbox(77.2197,28.6328,5000,5000)
src <- osmsource_api()
osm <- get_osm(box, source = src)
graph <- as_igraph(osm)
plot(graph)
box <- center_bbox(77.2197,28.6328,500,500)
src <- osmsource_api()
osm <- get_osm(box, source = src)
graph <- as_igraph(osm)
plot(graph)
library(osmar)
box <- center_bbox(77.2197,28.6328,20,20)
src <- osmsource_api()
osm <- get_osm(box, source = src)
hs_ids <- find(osm, node(tags(v %agrep% "station")))
hs <- subset(osm, node_ids = hs_ids)
lat <- hs$nodes$attrs$lat
lng <- hs$nodes$attrs$lon
str(lat)
df <- data.frame(lat,lng)
#making voronoi diagram
library(deldir)
#This creates the voronoi line segments
voronoi <- deldir(df$lng, df$lat)
str(voronoi)
ggmap(osm)
library(ggmap)
library(ggplot2)
ggmap(osm)
library(ggmap)
plot(osm)
voronoi <- deldir(df$lng, df$lat)
str(voronoi)
library(ggmap)
library(ggplot2)
delhi <- get_map(location="New Delhi",zoom=13,source="osm")
delhi <- get_map(location= c(lon = 77.2197, lat = 28.6328),zoom=13,source="osm")
str(delhi)
ggmap(delhi) +
geom_point(aes(x = lng, y = lat), data = df,
alpha = .8, color="red", size = 1) +
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),
size = 0.5,
data = voronoi$dirsgs,
linetype = 1,
color= "#000000")
"my"+"apple"
"Fe" == "fe"
x = 2; y = T; z = "apple";
typeof(x); typeof(y); typeof(z);
a = c(2 ,6) and b = c(4, 3, 5, 7)
a = c(2 ,6); b = c(4, 3, 5, 7)
s = a+b
s
a = c(2 ,6); b = c(4, 3, 5, 7)
vect <- c(1, 3, 5, 6)
vect2 <- vect[-3]
vect2
a = c(2 ,6, 3); b = c(4, 3, 5, 7)
s = s*b
s
s = a*b
s
library(swirl)
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
library(swirl)
5 + 7
x <- 5 + 7
x
y <- x - 3
y
bye()
logical_levels
matrix(1:9, byrow = TRUE, nrow = 3)
matrix(1:9, byrow = FALSE, nrow = 3)
#Introduction
library(ggplot2)
library(ggthemes)
library(dplyr)
library(gridExtra)
library(tidyr)
library(MASS)
library(scales)
library(GGally)
#library(polycor)
```
```{r echo=FALSE, Load_the_Data}
# Load the Data
ProsperLoanData = read.csv("prosperLoanData.csv")
setwd("~/Desktop/DesktopRaw/NANODEGREE/Data Analyst/P4")
ProsperLoanData = read.csv("prosperLoanData.csv")
```
#Exploring the dataset
Here we explore the dataset as follows
```{r echo=FALSE, ProsperLoanData}
sprintf("No of data points: %s", nrow(ProsperLoanData))
sprintf("No of features: %s", ncol(ProsperLoanData))
names(ProsperLoanData)
str(ProsperLoanData)
ProsperLoanData$ProsperRating.alpha = factor(ProsperLoanData$ProsperRating..Alpha.,
levels = c("AA","A","B","C","D","E","HR","NA"))
ProsperLoanData$ProsperRating <-factor(ProsperLoanData$ProsperRating..Alpha,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ProsperLoanData$ProsperScore = factor(ProsperLoanData$ProsperScore)
```
str(ProsperLoanData)
ggplot(data = ProsperLoanData, aes(ProsperRating.alpha)) +
geom_bar(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
table(ProsperLoanData$ProsperRating.alpha)
table(ProsperLoanData$ProsperRating.alpha)
ggplot(data = ProsperLoanData, aes(ProsperRating.alpha)) +
geom_bar(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
```
This bar chart has some insights on most popular rating. As one can notice from the plots, majority of loans are non classified('NA'), and among the classified ones, 'C' is the most rated and 'AA' is least. Let me check the same, if my plot was correct.
```{r echo=FALSE}
table(ProsperLoanData$ProsperRating.alpha)
```
ProsperLoanData$ProsperRating.alpha = factor(ProsperLoanData$ProsperRating..Alpha.,
ProsperLoanData$ProsperRating.alpha = factor(ProsperLoanData$ProsperRating..Alpha.,
ProsperLoanData$ProsperRating.alpha = factor(ProsperLoanData$ProsperRating..Alpha.,
levels = c("AA","A","B","C","D","E","HR","NA"))
ProsperLoanData$ProsperRating <-factor(ProsperLoanData$ProsperRating..Alpha.,
levels = c('AA', 'A', 'B', 'C', 'D', 'E', 'HR', 'NA'))
ProsperLoanData$ProsperScore = factor(ProsperLoanData$ProsperScore)
table(ProsperLoanData$ProsperRating.alpha)
ggplot(data = ProsperLoanData, aes(ProsperRating.alpha)) +
geom_bar(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
```
table(ProsperLoanData$ProsperRating..Alpha.)
ggplot(data = ProsperLoanData, aes(ProsperRating..Alpha.)) +
geom_bar(aes(fill = ProsperRating.alpha)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
ProsperLoanData = read.csv("prosperLoanData.csv")
str(ProsperLoanData)
sprintf("No of features: %s", ncol(ProsperLoanData))
Now that we have seen the variables, I would like to plot some variable one by one to see what insights they can give.
Firstly I feel Prosper rating is the most important variable. Rating has levels(factor) and it seems score is a range. I want to know how many number of loans customers take with respecting rating levels.
#1. Prosper Rating Distribution
geom_bar(aes(fill = ProsperRating..Alpha.)) +
xlab('Rating') +
sprintf("No of data points: %s", nrow(ProsperLoanData))
```
```{r echo=FALSE, Univariate_Plots}
ggtitle('Numbers of Loans by Prosper Rating') +
names(ProsperLoanData)
ggplot(data = ProsperLoanData, aes(ProsperRating..Alpha.)) +
ylab('Number of Loans')
# Univariate Plots Section
table(ProsperLoanData$ProsperRating..Alpha.)
ggplot(data = ProsperLoanData, aes(ProsperRating..Alpha.)) +
geom_bar(aes(fill = ProsperRating..Alpha.)) +
ggtitle('Numbers of Loans by Prosper Rating') +
xlab('Rating') +
ylab('Number of Loans')
```
This bar chart has some insights on most popular rating. As one can notice from the plots, majority of loans are non classified('NA'), and among the classified ones, 'C' is the most rated and 'AA' is least. Let me check the same, if my plot was correct.
```{r echo=FALSE}
table(ProsperLoanData$ProsperRating..Alpha.)
ggplot(data = ProsperLoanData, aes(x = ProsperScore)) +
geom_bar(color = "black", fill = '#0056E5') +
theme(axis.text.x = element_text(angle = 2, vjust = 0.5)) +
xlab("Score") + ggtitle("ProsperScore Distribution")
ggplot(data = ProsperLoanData, aes(x = ProsperScore)) +
geom_bar(color = "black", fill = '#0056E5') +
theme(axis.text.x = element_text(angle = 2, vjust = 0.5)) +
xlab("Score") + ggtitle("ProsperScore Distribution")
table(ProsperLoanData$ProsperScore)
max(table(ProsperLoanData$ProsperScore))
max(ProsperLoanData$ProsperScore)
summary(ProsperLoanData$ProsperScore)
table(ProsperLoanData$ProsperScore)
summary(ProsperLoanData$ProsperScore)
ggplot(data = ProsperLoanData, aes(x = LoanStatus)) +
ggplot(data = ProsperLoanData, aes(x = LoanStatus)) +
geom_bar(color = "black", fill = '#660000') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5)) +
xlab("Score") + ggtitle("Loan Status Distribution")
```{r echo=FALSE,Loan_Status_Distribution }
#3. Loan Status Distribution
ggplot(data = ProsperLoanData, aes(x = LoanStatus)) +
geom_bar(color = "black", fill = '#660000') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5)) +
xlab("Score") + ggtitle("Loan Status Distribution")
table(ProsperLoanData$LoanStatus)
ggplot(data = ProsperLoanData, aes(x = EmploymentStatus)) +
geom_bar(color = "black", fill = '#660000') +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5)) +
xlab("Score") + ggtitle("EmploymentStatus Distribution")
table(ProsperLoanData$EmploymentStatus)
ProsperLoanData$IncomeRange = factor(ProsperLoanData$IncomeRange,
ProsperLoanData$IncomeRange = factor(ProsperLoanData$IncomeRange,
levels=c("Not employed", "$0", "$1-24,999",
"$25,000-49,999", "$50,000-74,999",
"$75,000-99,999", "$100,000+",
"Not displayed"))
ProsperLoanData$IncomeRange = factor(ProsperLoanData$IncomeRange,
levels=c("Not employed", "$0", "$1-24,999",
"$25,000-49,999", "$50,000-74,999",
"$75,000-99,999", "$100,000+",
"Not displayed"))
ProsperLoanData$IncomeRange = factor(ProsperLoanData$IncomeRange,
levels=c("Not employed", "$0", "$1-24,999",
"$25,000-49,999", "$50,000-74,999",
"$75,000-99,999", "$100,000+",
"Not displayed"))
##5.1. Income Range
ggplot(data = ProsperLoanData, aes(IncomeRange)) +
geom_bar(color="black", fill = '#007EE5', width = 0.5) +
ggtitle('Borrower Income Range') +
xlab('Income') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
ylab('Count')
summary(ProsperLoanData$IncomeRange)
ggplot(aes(x = StatedMonthlyIncome), data = ProsperLoanData) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0, quantile(ProsperLoanData$StatedMonthlyIncome, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(ProsperLoanData$StatedMonthlyIncome, 0.99,
na.rm = TRUE), 1000)) +
theme(axis.text.x = element_text(angle = 90))
summary(ProsperLoanData$StatedMonthlyIncome)
ggplot(data = ProsperLoanData, aes(x = DebtToIncomeRatio)) +
geom_histogram(color = "black", fill = '#007E0F', binwidth = 0.02) +
xlim(0, quantile(ProsperLoanData$DebtToIncomeRatio, prob = 0.99, na.rm=TRUE)) +
ggtitle("Debt To Income Ratio") +
xlab("Debt to Income Ratio") +
ylab("Count")
summary(ProsperLoanData$DebtToIncomeRatio)
ProsperLoanData$LoanOriginationDate <- as.POSIXct(ProsperLoanData$LoanOriginationDate,
format="%Y-%m-%d")
ProsperLoanData$LoanOriginationDate.year <- ProsperLoanData$LoanOriginationDate %>%
format('%Y') %>% strtoi()
## 6. Number of Loans split by Year
ggplot(ProsperLoanData, aes(as.factor(LoanOriginationDate.year))) +
stat_count(color = 'black', fill = '#007EE5') +
ggtitle('Number of Loans by Year') +
xlab('Year') +
ylab('Number of Loans')
table(ProsperLoanData$LoanOriginationDate.year)
x <- c('Debt Consolidation',
'Home Improvement','Business',
'Personal Loan',
'Student Use',
'Auto',
'Baby & Adoption',
'Boat',
'Cosmetic Procedure',
'Engagement Ring',
'Green Loans',
'Household Expenses',
'Large Purchases',
'Medical/Dental',
'Motorcycle', 'RV',
'Taxes', 'Vacation',
'Wedding Loans',
'Other',
'Not Available')
ProsperLoanData$ListingCategory <- factor(ProsperLoanData$ListingCategory..numeric.,
levels = c(1:6,8:20,7,0), labels = x)
ggplot(data = ProsperLoanData, aes(ListingCategory)) +
geom_bar(color="black", fill = '#000067', width = 0.5) +
ggtitle('Borrowers Purpose of the Loan Listing') +
theme(axis.text.x = element_text(angle = 45, vjust = 0.6)) +
xlab('Listing Category') +
ylab('Number of loans')
ggplot(ProsperLoanData, aes(LoanOriginalAmount)) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0,quantile(ProsperLoanData$LoanOriginalAmount, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(ProsperLoanData$LoanOriginalAmount, 0.99,
na.rm = TRUE), 2000)) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
summary(ProsperLoanData$LoanOriginalAmount)
boxplot(ProsperLoanData$LoanOriginalAmount, main=toupper("Box plot showing the summary of Loan Original Amount"), font.main=1, cex.main=0.7, xlab="Prosper Loan Data", ylab="Loan Original Amount", col="darkgreen")
ggplot(ProsperLoanData, aes(LoanOriginalAmount)) +
geom_histogram(binwidth = 1000) +
scale_x_continuous(
limits = c(0,quantile(ProsperLoanData$LoanOriginalAmount, 0.99,
na.rm = TRUE)),
breaks = seq(0, quantile(ProsperLoanData$LoanOriginalAmount, 0.99,
na.rm = TRUE), 2000)) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
ggplot(data = ProsperLoanData, aes(x = BorrowerRate)) +
geom_histogram(color = "black", fill = '#007EE5', binwidth = 0.01) +
xlab("Rate") +
ggtitle("Borrower Rate")
summary(ProsperLoanData$BorrowerRate)
ggplot(data = ProsperLoanData, aes(x = BorrowerState)) +
geom_bar(color = "black", fill = '#FFF0E5') +
xlab("State") +
theme(axis.text.x = element_text(angle = 55, hjust = 0.5)) +
ggtitle("Borrower State")
table(ProsperLoanData$BorrowerState)
```
Highest no of Loans were dispersed for borrowers from state of CA with a count of 14,717. and least were from ND with a count of 30.
ggplot(aes(x=LenderYield), data=ProsperLoanData) +
geom_histogram(binwidth=0.005,fill = '#007EE5', color='black') +
scale_x_continuous(breaks=seq(0, 0.5, 0.05)) +
ggtitle("The Lender Yield on the Loan")
summary(ProsperLoanData$LenderYield)
## 13. Investor Profile - LoanOriginal Amount ~ Term Histogram
table(ProsperLoanData$Term)
ggplot(data = ProsperLoanData, aes(x = Term)) +
geom_histogram(color = "black", fill = '#007EE5', binwidth = 12) +
xlab("Term") +
ylab("Loan Count") +
ggtitle("Borrower Rate")
ProsperLoanData$ProsperRating.alpha <- factor(ProsperLoanData$ProsperRating.alpha)
ProsperLoanData$ProsperRating.alpha <- factor(ProsperLoanData$ProsperRating..Alpha.)
ggplot(data = ProsperLoanData, aes(x = ProsperRating.alpha, y = BorrowerRate)) +
geom_boxplot() +
xlab("Prosper Rating") +
ggtitle("Borrower Rate for Different Prosper Rating")
ggplot(aes(y = StatedMonthlyIncome *12 , x =ProsperRating.alpha),
data = ProsperLoanData) +
geom_boxplot(aes(fill = ProsperRating..numeric.)) +
xlab("Prosper Rating") +
ylab("Yearly Income") +
ggtitle("Yearly Income for Different Prosper Rating")
ggplot(aes(y = StatedMonthlyIncome *12 , x =ProsperRating.alpha ),
data = subset(ProsperLoanData,ProsperLoanData$StatedMonthlyIncome > 0 &
ProsperLoanData$StatedMonthlyIncome < 15000)) +
geom_boxplot(aes(fill = ProsperRating..numeric.)) +
xlab("Prosper Rating") +
ylab("Yearly Income") +
ggtitle("Yearly Income for Different Prosper Rating")
cor(ProsperLoanData$DebtToIncomeRatio, ProsperLoanData$BorrowerRate, use = 'complete.obs')
```
The relationship is not that significant when we do a correlation test.
ggplot(aes(x = EmploymentStatus, y = LoanOriginalAmount), data = na.omit(ProsperLoanData)) +
geom_boxplot(fill ='#5E00E5') +
scale_y_continuous(limits = c(0,15000)) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
ggplot(aes(y = BorrowerRate , x = BorrowerState),
data = ProsperLoanData) +
geom_boxplot(aes(fill = BorrowerRate))+
theme(axis.text.x = element_text(angle = 70, hjust = 0.5))+
xlab("BorrowerState") +
ylab("BorrowerRate") +
ggtitle("Different Borrowers Rates in different cities")
```
Not such an interesting plot for now.
Lets now explore Investors' variables. Just like BorrowerRate and Prosper Rating, is there any relation between Lender Yield and Rating?
```{r echo=FALSE, message=FALSE, warning=FALSE, LenderYield_Rating}
## 18. Investor profile - Lender Yield vs Rating
ProsperLoanData$ProsperRating.alpha = factor(ProsperLoanData$ProsperRating..Alpha.,
levels = c("AA","A","B","C","D","E","HR",""))
ggplot(data = na.omit(ProsperLoanData), aes(x = ProsperRating.alpha, y = LenderYield)) +
geom_boxplot() +
xlab("Prosper Rating") +
ggtitle("Yield for Different Prosper Rating")
## 19. Investor Profile - LoanOriginal Amount ~ Term Boxplot
ggplot(aes(y = LoanOriginalAmount, x = factor(Term)), data = ProsperLoanData) +
geom_boxplot(fill='#FFCCCC') +
scale_y_continuous(
limits = c(0, quantile(ProsperLoanData$LoanOriginalAmount, 0.99, na.rm = TRUE)))
ggplot(aes(x= DebtToIncomeRatio, y=LenderYield, color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 1) +
theme_dark() +
#scale_y_log10() +
#facet_grid(.~ ProsperRating.alpha ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield  vs Debt to Income Ratio vs Prosper Rate (for loans with rating")      + scale_colour_brewer() +
xlab ("Debt To Income Ratio < 1") +
ylab ("Lender Yield") +
scale_fill_discrete(name = "Prosper Rating")
plot1 <- ggplot(aes(x= ProsperRating.alpha, y=LenderYield,
color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 0.8, position = "jitter") +
facet_grid( .~ Term  ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer(palette = "Greens") +
ggtitle("Lender Yield vs Term
and Prosper Rating")
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= LenderYield ),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ Term   ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer() +
ggtitle("Boxplot - Lender Yield vs Term and Prosper Rating")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
```
plot1 <- ggplot(aes(x= ProsperRating.alpha, y=LenderYield,
color=ProsperRating.alpha),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_point(alpha = 0.8, position = "jitter") +
facet_grid( .~ Term  ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer(palette = "Greens") +
ggtitle("Lender Yield vs Term
and Prosper Rating")
plot2 <- ggplot(aes(x= ProsperRating.alpha, y= LenderYield ),
data=na.omit(filter(ProsperLoanData, DebtToIncomeRatio < 1))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ Term   ) +
theme_dark() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_colour_brewer() +
ggtitle("Boxplot - Lender Yield vs Term and Prosper Rating")
grid.arrange(plot1, plot2, ncol=1, nrow =2)
```
This is a closer look for lender yield vs prosper rating divided by Term variable. The majority of loans opt-in for 36-month term and the return for 36-month and 60-month are just higher than 12-month, also considering the fact there're less loan in 12-month term than other term.
```{r echo=FALSE, Multivariate_Plots2}
## 22. Borrower Rate vs Year vs Prosper Rating
plot11 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate),
data=na.omit(filter(ProsperLoanData))) +
geom_boxplot(aes(fill = ProsperRating.alpha)) +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
plot22 <- ggplot(aes(x= ProsperRating.alpha, y= BorrowerRate, color=ProsperRating.alpha ),
data=na.omit(filter(ProsperLoanData))) +
geom_point(alpha = 1, position = "jitter") +
facet_grid( .~ LoanOriginationDate.year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle("Lender Yield vs Term and Prosper Rate")
grid.arrange(plot11, plot22, ncol=1, nrow =2)
